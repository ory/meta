name: Synchronize Repositories

on:
  # action can be manually triggered
  workflow_dispatch:
  # action is triggered on push to the following paths
  push:
    paths:
      - 'templates/**'
      - 'scripts/sync*'
      - 'package.json'
      - '.github/workflows/sync.yml'
    branches:
      - master

jobs:
  milestone:
    name: Synchronize Repositories
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
  # installs moreutils on the Action worker node to use the sponge function
      - name: Install sponge
        run: sudo apt-get update -y && sudo apt-get install -y moreutils
  # Ssh-agent action to get a ssh key with privileges to repos outside of /meta in this case the repositories you want to sync.
      - uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Synchronize ORY Hydra
        run: ./scripts/sync-server.sh ory/hydra master Hydra
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_AENEASR }}

      - name: Synchronize ORY Keto
        run: ./scripts/sync-server.sh ory/keto master Keto
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_AENEASR }}

      - name: Synchronize ORY Oathkeeper
        run: ./scripts/sync-server.sh ory/oathkeeper master Oathkeeper
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_AENEASR }}
  # Synchronize server 
      - name: Synchronize ORY Kratos
  # runs the sync-server bash script in the Action workers CLI with arguments: $1=workdir (the repository you want to sync) $2=branch $3=humanName
        run: ./scripts/sync-server.sh ory/kratos master Kratos
  # sets the required github token as enviromental variable
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_AENEASR }}

      - name: Synchronize ORY Hydra Login, Logout And Consent Node Example
        run: |
          ./scripts/sync-library.sh ory/hydra-login-consent-node master "Hydra Login, Logout And Consent Node Example"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_AENEASR }}

      - name: Synchronize ORY CLI
        run: |
          ./scripts/sync-library.sh ory/cli master CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_AENEASR }}
  # Synchronize library
      - name: Synchronize ORY Kratos SelfService UI Node Example
  # runs the sync-library bash script in the Action workers CLI with arguments: $1=workdir (the repository you want to sync) $2=branch $3=humanName
        run: |
          ./scripts/sync-library.sh ory/kratos-selfservice-ui-node master "Kratos SelfService UI Node Example"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_AENEASR }}

      - name: Synchronize ORY Kratos SelfService UI React Native Example
        run: |
          ./scripts/sync-library.sh ory/kratos-selfservice-ui-react-native master "Kratos SelfService UI React Native Example"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_AENEASR }}

      - name: Synchronize ORY Fosite
        run: ./scripts/sync-library.sh ory/fosite master Fosite
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_AENEASR }}

      - name: Synchronize ORY Dockertest
        run: ./scripts/sync-library.sh ory/dockertest v3 Dockertest
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_AENEASR }}

      - name: Synchronize ORY Herodot
        run: ./scripts/sync-library.sh ory/herodot master Herodot
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_AENEASR }}

      - name: Synchronize ORY Graceful
        run: ./scripts/sync-library.sh ory/graceful master Graceful
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_AENEASR }}

      - name: Synchronize ORY Themes
        run: ./scripts/sync-library.sh ory/themes master Themes
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_AENEASR }}

      - name: Synchronize ORY Kubernetes Resources
        run: ./scripts/sync-library.sh ory/k8s master "Kubernetes Resources"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_AENEASR }}

      - name: Synchronize ORY X
        run: ./scripts/sync-library.sh ory/x master X
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_AENEASR }}

      - name: Synchronize ORY Web
        run: ./scripts/sync-library.sh ory/web master Web
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_AENEASR }}
  # Synchronize action
      - name: Syncronize ORY Closed Reference Notifier
        # runs the sync-action bash script in the Action workers CLI with arguments: $1=workdir (the repository you want to sync) $2=branch $3=humanName
        run: ./scripts/sync-action.sh ory/closed-reference-notifier master "Closed Reference Notifier"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_AENEASR }}

      - name: Syncronize ORY Label Sync Action
        run: ./scripts/sync-action.sh ory/label-sync-action master "Label Sync Action"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_AENEASR }}

      - name: Syncronize ORY Milestone Action
        run: ./scripts/sync-action.sh ory/milestone-action master "Milestone Action"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_AENEASR }}

      - name: Syncronize ORY Prettier Styles Action
        run: ./scripts/sync-action.sh ory/prettier-styles master "Prettier Styles"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_AENEASR }}

      - name: Syncronize ORY Buildbuf Action
        run: ./scripts/sync-action.sh ory/build-buf-action main "Buildbuf Action"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_AENEASR }}

      - name: Synchronize ORY Works
        run: ./scripts/sync-library.sh ory/works master Works
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_AENEASR }}
